{
	"info": {
		"_postman_id": "34da1890-802c-44f2-bc5f-1266af9a9776",
		"name": "Content Scheduler API",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "43071457"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response has user and token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user).to.have.property('id');",
									"    pm.expect(jsonData.user).to.have.property('name', 'Jane Doe');",
									"    pm.expect(jsonData.user).to.have.property('email', 'jane@example.com');",
									"    pm.expect(jsonData.token).to.be.a('string');",
									"    pm.environment.set('auth_token', jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"name\":\"Jane Doe\",\"email\":\"jane@example.com\",\"password\":\"password123\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/register"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"name\":\"Jane Doe\",\"email\":\"jane@example.com\",\"password\":\"password123\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/register"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"user\":{\"id\":1,\"name\":\"Jane Doe\",\"email\":\"jane@example.com\"},\"token\":\"1|xyz789\"}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response has user and token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.user).to.have.property('id');",
									"    pm.expect(jsonData.user).to.have.property('email', 'jane@example.com');",
									"    pm.expect(jsonData.token).to.be.a('string');",
									"    pm.environment.set('auth_token', jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"jane@example.com\",\"password\":\"password123\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/login"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"jane@example.com\",\"password\":\"password123\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"user\":{\"id\":1,\"name\":\"Jane Doe\",\"email\":\"jane@example.com\"},\"token\":\"2|abc123\"}"
						}
					]
				},
				{
					"name": "Login (Invalid Credentials)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"Response has error message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message', 'Invalid credentials');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"email\":\"jane@example.com\",\"password\":\"wrong\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/login"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"email\":\"jane@example.com\",\"password\":\"wrong\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/login"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"message\":\"Invalid credentials\"}"
						}
					]
				},
				{
					"name": "Get User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response has user data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('name');",
									"    pm.expect(jsonData).to.have.property('email');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/user"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/user"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"id\":1,\"name\":\"Jane Doe\",\"email\":\"jane@example.com\"}"
						}
					]
				},
				{
					"name": "Get User Profile (Unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"pm.test(\"Response has unauthenticated message\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message', 'Unauthenticated.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/user"
					},
					"response": [
						{
							"name": "Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/user"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"message\":\"Unauthenticated.\"}"
						}
					]
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "List Posts (Before Create)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response has paginated posts\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data').that.is.an('array');",
									"    pm.expect(jsonData).to.have.property('meta');",
									"    pm.environment.set('post_count_before', jsonData.data.length);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts?status=scheduled",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "status",
									"value": "scheduled"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/posts?status=scheduled",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"posts"
									],
									"query": [
										{
											"key": "status",
											"value": "scheduled"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"data\":[],\"meta\":{\"current_page\":1,\"last_page\":1,\"per_page\":15,\"total\":0}}"
						}
					]
				},
				{
					"name": "Create Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"pm.test(\"Response has post data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('id');",
									"    pm.expect(jsonData).to.have.property('title', 'Sample Post');",
									"    pm.expect(jsonData).to.have.property('status', 'scheduled');",
									"    pm.expect(jsonData.platforms).to.be.an('array').with.lengthOf(2);",
									"    pm.environment.set('post_id', jsonData.id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Sample Post",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Content for X and Instagram",
									"type": "text"
								},
								{
									"key": "scheduled_time",
									"value": "{{$isoTimestamp}}",
									"type": "text"
								},
								{
									"key": "platforms[]",
									"value": "1",
									"type": "text"
								},
								{
									"key": "platforms[]",
									"value": "2",
									"type": "text"
								}
							]
						},
						"url": "{{base_url}}/posts"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Sample Post",
											"type": "text"
										},
										{
											"key": "content",
											"value": "Content for X and Instagram",
											"type": "text"
										},
										{
											"key": "scheduled_time",
											"value": "2025-05-29T00:15:00Z",
											"type": "text"
										},
										{
											"key": "platforms[]",
											"value": "1",
											"type": "text"
										},
										{
											"key": "platforms[]",
											"value": "2",
											"type": "text"
										}
									]
								},
								"url": "{{base_url}}/posts"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"id\":1,\"title\":\"Sample Post\",\"content\":\"Content for X and Instagram\",\"scheduled_time\":\"2025-05-29T00:15:00Z\",\"status\":\"scheduled\",\"platforms\":[{\"id\":1,\"name\":\"X\"},{\"id\":2,\"name\":\"Instagram\"}]}"
						}
					]
				},
				{
					"name": "Create Post (Invalid Platforms)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Response has validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message').that.includes('platforms');",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}",
								"name": "authorization",
								"type": "text"
							},
							{
								"key": "Cache-Control",
								"value": "no-cache",
								"name": "cache-control",
								"type": "text"
							},
							{
								"key": "Postman-Token",
								"value": "<calculated when request is sent>",
								"name": "postman-token",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data; boundary=<calculated when request is sent>",
								"name": "content-type",
								"type": "text"
							},
							{
								"key": "Content-Length",
								"value": "<calculated when request is sent>",
								"name": "content-length",
								"type": "text"
							},
							{
								"key": "Host",
								"value": "<calculated when request is sent>",
								"name": "host",
								"type": "text"
							},
							{
								"key": "User-Agent",
								"value": "PostmanRuntime/7.39.1",
								"name": "user-agent",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*",
								"name": "accept",
								"type": "text"
							},
							{
								"key": "Accept-Encoding",
								"value": "gzip, deflate, br",
								"name": "accept-encoding",
								"type": "text"
							},
							{
								"key": "Connection",
								"value": "keep-alive",
								"name": "connection",
								"type": "text"
							},
							{
								"key": "accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Invalid Post",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Invalid platforms",
									"type": "text"
								},
								{
									"key": "scheduled_time",
									"value": "{{$isoTimestamp}}",
									"type": "text"
								},
								{
									"key": "platforms[]",
									"value": "999",
									"type": "text"
								}
							]
						},
						"url": "{{base_url}}/posts"
					},
					"response": [
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Invalid Post",
											"type": "text"
										},
										{
											"key": "content",
											"value": "Invalid platforms",
											"type": "text"
										},
										{
											"key": "scheduled_time",
											"value": "2025-05-29T00:15:00Z",
											"type": "text"
										},
										{
											"key": "platforms[]",
											"value": "999",
											"type": "text"
										}
									]
								},
								"url": "{{base_url}}/posts"
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"message\":\"The selected platforms.0 is invalid.\"}"
						}
					]
				},
				{
					"name": "List Posts (After Create)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Cache cleared after post create\", function () {",
									"    var jsonData = pm.response.json();",
									"    var postCountBefore = parseInt(pm.environment.get('post_count_before') || 0);",
									"    pm.expect(jsonData.data.length).to.be.at.least(postCountBefore + 1);",
									"    pm.expect(jsonData.data[0]).to.have.property('title', 'Sample Post');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/posts?status=scheduled",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "status",
									"value": "scheduled"
								}
							]
						}
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/posts?status=scheduled",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"posts"
									],
									"query": [
										{
											"key": "status",
											"value": "scheduled"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"data\":[{\"id\":1,\"title\":\"Sample Post\",\"content\":\"Content for X and Instagram\",\"scheduled_time\":\"2025-05-29T00:15:00Z\",\"status\":\"scheduled\",\"platforms\":[{\"id\":1,\"name\":\"X\"},{\"id\":2,\"name\":\"Instagram\"}]}],\"meta\":{\"current_page\":1,\"last_page\":1,\"per_page\":15,\"total\":1}}"
						}
					]
				},
				{
					"name": "Update Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response has updated post\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('title', 'Updated Post');",
									"    pm.expect(jsonData).to.have.property('content', 'Updated content.');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"title\":\"Updated Post\",\"content\":\"Updated content.\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/posts/{{post_id}}"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"title\":\"Updated Post\",\"content\":\"Updated content.\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/posts/1"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"id\":1,\"title\":\"Updated Post\",\"content\":\"Updated content.\",\"scheduled_time\":\"2025-05-29T00:15:00Z\",\"status\":\"scheduled\",\"platforms\":[{\"id\":1,\"name\":\"X\"},{\"id\":2,\"name\":\"Instagram\"}]}"
						}
					]
				},
				{
					"name": "Schedule Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Post is scheduled\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'scheduled');",
									"    pm.expect(jsonData).to.have.property('scheduled_time').that.is.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"scheduled_time\":\"{{{{$isoTimestamp}} + 1 hour}}\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/posts/{{post_id}}/schedule"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduled_time\":\"2025-05-29T01:15:00Z\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/posts/1/schedule"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"id\":1,\"title\":\"Updated Post\",\"content\":\"Updated content.\",\"scheduled_time\":\"2025-05-29T01:15:00Z\",\"status\":\"scheduled\",\"platforms\":[{\"id\":1,\"name\":\"X\"},{\"id\":2,\"name\":\"Instagram\"}]}"
						}
					]
				},
				{
					"name": "Publish Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Post is published\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'published');",
									"    pm.expect(jsonData.scheduled_time).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"url": "{{base_url}}/posts/{{post_id}}/publish"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": "{{base_url}}/posts/1/publish"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"id\":1,\"title\":\"Updated Post\",\"content\":\"Updated content.\",\"scheduled_time\":null,\"status\":\"published\",\"platforms\":[{\"id\":1,\"name\":\"X\"},{\"id\":2,\"name\":\"Instagram\"}]}"
						}
					]
				},
				{
					"name": "Revert Post to Draft",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Post is draft\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('status', 'draft');",
									"    pm.expect(jsonData.scheduled_time).to.be.null;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"url": "{{base_url}}/posts/{{post_id}}/draft"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": "{{base_url}}/posts/1/draft"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"id\":1,\"title\":\"Updated Post\",\"content\":\"Updated content.\",\"scheduled_time\":null,\"status\":\"draft\",\"platforms\":[{\"id\":1,\"name\":\"X\"},{\"id\":2,\"name\":\"Instagram\"}]}"
						}
					]
				},
				{
					"name": "Delete Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{base_url}}/posts/{{post_id}}"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": "{{base_url}}/posts/1"
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Platforms",
			"item": [
				{
					"name": "List Platforms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response has platforms\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array').with.lengthOf(3);",
									"    pm.expect(jsonData[0]).to.have.property('id', 1);",
									"    pm.expect(jsonData[0]).to.have.property('name', 'X');",
									"    pm.expect(jsonData[0]).to.have.property('type', 'text');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/platforms"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/platforms"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "[{\"id\":1,\"name\":\"X\",\"type\":\"text\"},{\"id\":2,\"name\":\"Instagram\",\"type\":\"image\"},{\"id\":3,\"name\":\"LinkedIn\",\"type\":\"text\"}]"
						}
					]
				},
				{
					"name": "List User Platforms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response has user platforms\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"    pm.expect(jsonData.length).to.be.at.least(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/user/platforms"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/user/platforms"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "[{\"id\":1,\"name\":\"X\",\"type\":\"text\"},{\"id\":2,\"name\":\"Instagram\",\"type\":\"image\"}]"
						}
					]
				},
				{
					"name": "Toggle User Platforms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Platforms updated\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message', 'Platforms updated');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"platform_ids\":[1,3]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/user/platforms"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"platform_ids\":[1,3]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/platforms"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"message\":\"Platforms updated\"}"
						}
					]
				},
				{
					"name": "Toggle User Platforms (Invalid IDs)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 422\", function () {",
									"    pm.response.to.have.status(422);",
									"});",
									"pm.test(\"Response has validation error\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('message').that.includes('platform_ids');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"platform_ids\":[999]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{base_url}}/user/platforms"
					},
					"response": [
						{
							"name": "Unprocessable Entity",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"platform_ids\":[999]}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{base_url}}/user/platforms"
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"message\":\"The selected platform_ids.0 is invalid.\"}"
						}
					]
				}
			]
		},
		{
			"name": "Analytics",
			"item": [
				{
					"name": "Get Analytics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response has analytics data\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('posts_per_platform').that.is.an('array');",
									"    pm.expect(jsonData).to.have.property('success_rate').that.is.a('number');",
									"    pm.expect(jsonData).to.have.property('scheduled_vs');",
									"    pm.expect(jsonData.scheduled_vs).to.have.property('scheduled_count');",
									"    pm.expect(jsonData.scheduled_vs).to.have.property('published_count');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/analytics"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/analytics"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"posts_per_platform\":[{\"platform\":\"X\",\"count\":1},{\"platform\":\"Instagram\",\"count\":1},{\"platform\":\"LinkedIn\",\"count\":0}],\"success_rate\":100.0,\"scheduled_vs\":{\"scheduled_count\":1,\"published_count\":0}}"
						}
					]
				}
			]
		},
		{
			"name": "Activity Logs",
			"item": [
				{
					"name": "Get Activity Logs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Response has paginated logs\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property('data').that.is.an('array');",
									"    pm.expect(jsonData).to.have.property('meta');",
									"    pm.expect(jsonData.data[0]).to.have.property('action');",
									"    pm.expect(jsonData.data[0]).to.have.property('details');",
									"    pm.expect(jsonData.data[0]).to.have.property('created_at');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{auth_token}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/activity-logs"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/activity-logs"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": null,
							"cookie": [],
							"body": "{\"data\":[{\"action\":\"post_created\",\"details\":\"Post 1 created for platforms: X, Instagram\",\"created_at\":\"2025-05-29T00:15:00Z\"}],\"meta\":{\"current_page\":1,\"last_page\":1,\"per_page\":15,\"total\":1}}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api"
		},
		{
			"key": "auth_token",
			"value": "2|kknMpVq9PqizK4BXF400GfgJKAaCjDhYmvRjd43m17e511bf"
		},
		{
			"key": "post_id",
			"value": ""
		},
		{
			"key": "post_count_before",
			"value": ""
		}
	]
}